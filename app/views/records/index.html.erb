<turbo-frame id="facturacions_frame">
  <div class="bg-gray-800">
    <div class="bg-gray-900 py-6 px-8 shadow-lg rounded-lg text-center">
      <h1 class="text-3xl font-bold text-white">Transporte Vertical</h1>
    </div>

    <div class="mx-auto px-6 text-gray-200 mt-6">


      <turbo-frame id="facturacions_frame">

        <div data-controller="filters" class="px-6 mt-4">
          <form data-filters-target="form"
                action="<%= records_path %>"
                method="get"
                data-turbo-frame="facturacions_frame"
                class="flex flex-wrap gap-4 items-end bg-gray-900 p-4 rounded-lg shadow">

            <div>
              <label for="year" class="block text-sm text-gray-300 mb-1">Año</label>
              <select id="year" name="year"
                      data-action="change->filters#submit"
                      class="bg-gray-700 text-white rounded px-3 py-2">
                <option value="">Todos</option>
                <% (@filter_options["anios"] || []).each do |y| %>
                  <option value="<%= y %>" <%= "selected" if params[:year].to_s == y.to_s %>>
                    <%= y %>
                  </option>
                <% end %>
              </select>
            </div>

            <div>
              <label for="month" class="block text-sm text-gray-300 mb-1">Mes</label>
              <select id="month" name="month"
                      data-action="change->filters#submit"
                      class="bg-gray-700 text-white rounded px-3 py-2">
                <option value="">Todos</option>
                <% months = %w[Enero Febrero Marzo Abril Mayo Junio Julio Agosto Septiembre Octubre Noviembre Diciembre] %>
                <% (@filter_options["meses"] || []).each do |m| %>
                  <option value="<%= m %>" <%= "selected" if params[:month].to_s == m.to_s %>>
                    <%= "#{m.to_s.rjust(2,'0')} – #{months[m-1]}" %>
                  </option>
                <% end %>
              </select>
            </div>

            <div>
              <label for="empresa" class="block text-sm text-gray-300 mb-1">Empresa</label>
              <select id="empresa" name="empresa"
                      data-action="change->filters#submit"
                      class="bg-gray-700 text-white rounded px-3 py-2">
                <option value="">Todas</option>
                <% (@filter_options["empresas"] || []).each do |e| %>
                  <option value="<%= e %>" <%= "selected" if params[:empresa] == e %>>
                    <%= e %>
                  </option>
                <% end %>
              </select>
            </div>

            <button type="submit" class="hidden"></button>
          </form>
        </div>
        <div class="px-6 mt-2">
          <%= link_to "Exportar a Excel",
                      export_excel_records_path(
                        year: params[:year],
                        month: params[:month],
                        empresa: params[:empresa]
                      ),
                      data: { turbo: false },
                      class: "bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded shadow inline-block" %>
        </div>


      </turbo-frame>


      <div class="overflow-x-auto table-responsive mt-6">
        <table id="facturacions-table" class="table-auto w-full text-white">
          <thead class="bg-gray-800">
          <tr>
            <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">N° Corr</th>
            <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Nombre</th>
            <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Fecha<br>inspección</th>
            <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Inspecciones<br>completadas</th>
            <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Fecha<br>Entrega<br>Informes</th>
            <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Fecha<br>Factura</th>
            <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Precio</th>
            <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Ubicación</th>
            <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Empresa</th>


          </tr>
          </thead>

          <tbody class="bg-gray-700 divide-y divide-gray-600">
          <% @facturacions.each do |facturacion| %>

            <% inspeccion = facturacion.fecha_inspeccion&.to_date&.strftime('%d-%m-%Y') || '—' %>
            <% total_insp      = facturacion.inspections.size %>
            <% cerradas_insp   = facturacion.inspections.count { |i| i['state'] == 'Cerrado' } %>


            <% precio = facturacion.precio %>
            <% empresa = facturacion.empresa %>
            <tr class="bg-gray-800 border-b border-gray-700">
              <td class="px-6 py-4 whitespace-normal break-words font-semibold">
                <%= link_to("N°#{facturacion.number}", record_path(facturacion.id),data: { turbo_frame: "_top" }, class: "text-blue-400 hover:text-blue-600") %>
              </td>

              <td class="px-6 py-4 whitespace-normal break-words">
                <%= link_to("#{facturacion.name}", record_path(facturacion.id),data: { turbo_frame: "_top" }, class: "text-blue-400 hover:text-blue-600") %>
              </td>

              <td class="px-6 py-4 whitespace-normal break-words">
                <p class="text-white"><%=inspeccion %>
              </td>
              <td class="px-6 py-4 whitespace-normal break-words">
                <p class="text-white"> <%= "#{cerradas_insp}/#{total_insp}" %></p>
              </td>

              <td class="px-6 py-4 whitespace-normal break-words">
                <p class="text-white"> <%= facturacion.fecha_entrega.presence || 'Pendiente' %> </p>
              </td>

              <td class="px-6 py-4 whitespace-normal break-words">
                <p class="text-white">  <%= facturacion.factura.presence || 'Pendiente' %> </p>
              </td>

              <td class="px-6 py-4 whitespace-normal break-words">
                <p class="text-white"> <%= precio.presence || 'Pendiente' %> </p>
              </td>



              <td>
                <p class="text-white">  <%=
                    grouped = facturacion.inspections.group_by { |ins| [ins["region"], ins["comuna"]] }
                    lines = grouped.map do |(region, comuna), ins_arr|
                      if ins_arr.size > 1
                        "#{region}. #{comuna} x#{ins_arr.size}"
                      else
                        "#{region}. #{comuna}"
                      end
                    end

                    lines.join("<br>").html_safe
                %> </p>
              </td>


              <td class="px-6 py-4 whitespace-normal break-words">
                <p class="text-white"> <%= empresa.presence || 'Desconocida' %> </p>
              </td>


            </tr>



          <% end %>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <script>
      (function () {
          document.addEventListener("turbo:before-cache", () => {
              const tableEl = document.getElementById("facturacions-table");
              if (tableEl && tableEl._dataTableInstance) {
                  tableEl._dataTableInstance.destroy();
                  delete tableEl._dataTableInstance;
              }
              document
                  .querySelectorAll(
                      "[data-date-filter-target='startDate'], [data-date-filter-target='endDate']"
                  )
                  .forEach((el) => {
                      if (el._flatpickr) el._flatpickr.destroy();
                  });
          });

          function initFacturacionsTable() {
              const tableEl = document.getElementById("facturacions-table");
              if (
                  tableEl &&
                  !tableEl._dataTableInstance &&
                  typeof simpleDatatables !== "undefined" &&
                  simpleDatatables.DataTable
              ) {
                  const columnsWithoutFilter = [2, 3, 4, 5];
                  const dataTable = new simpleDatatables.DataTable(tableEl, {
                      columns: [
                          { select: 2, searchable: false },
                          { select: 3, searchable: false },
                          { select: 4, searchable: false },
                          { select: 5, searchable: false },
                      ],
                      labels: {
                          placeholder: "Buscar...",
                          perPage: "Registros por pág.",
                          noRows: "No hay datos para mostrar",
                          noResults: "No hay resultados que coincidan con tu búsqueda",
                          info: "Mostrando {start} a {end} de {rows} entradas"
                      },
                      tableRender: function (_data, table, type) {
                          if (type === "print") return table;
                          table.childNodes[0].childNodes.forEach((row) => {
                              if (!row.attributes) row.attributes = {};
                              row.attributes.class =
                                  (row.attributes.class || "") + " bg-gray-800 text-white";
                              row.childNodes.forEach((th) => {
                                  if (!th.attributes) th.attributes = {};
                                  th.attributes.class =
                                      (th.attributes.class || "") + " bg-gray-800 text-white";
                              });
                          });
                          const tHead = table.childNodes[0];
                          const firstRow = tHead.childNodes[0];
                          const filterHeaders = {
                              nodeName: "TR",
                              attributes: { class: "search-filtering-row bg-gray-800 text-white" },
                              childNodes: firstRow.childNodes.map((_th, index) => {
                                  if (columnsWithoutFilter.includes(index)) {
                                      return {
                                          nodeName: "TH",
                                          attributes: { style: "padding-top: 1rem;" },
                                          childNodes: [
                                              {
                                                  nodeName: "INPUT",
                                                  attributes: {
                                                      type: "search",
                                                      disabled: "disabled",
                                                      placeholder: "Sin filtro",
                                                      class:
                                                          "datatable-input text-white placeholder-gray-400 bg-gray-700 border-gray-600 w-full cursor-not-allowed opacity-50",
                                                      style: "cursor: not-allowed;"
                                                  }
                                              }
                                          ]
                                      };
                                  }
                                  return {
                                      nodeName: "TH",
                                      attributes: { style: "padding-top: 1rem;" },
                                      childNodes: [
                                          {
                                              nodeName: "INPUT",
                                              attributes: {
                                                  class:
                                                      "datatable-input text-white placeholder-gray-400 bg-gray-700 border-gray-600 w-full",
                                                  type: "search",
                                                  "data-columns": "[" + index + "]",
                                                  placeholder: "Filtrar"
                                              }
                                          }
                                      ]
                                  };
                              })
                          };
                          tHead.childNodes.push(filterHeaders);
                          return table;
                      }
                  });
                  tableEl._dataTableInstance = dataTable;
              }
          }

          function clearButtonPlugin() {
              return function (fp) {
                  return {
                      onReady: function () {
                          const btn = document.createElement("button");
                          btn.type = "button";
                          btn.textContent = "Quitar fecha";
                          btn.className = "flatpickr-clear-btn";
                          btn.addEventListener("click", function () {
                              fp.clear();
                              fp.close();
                          });
                          fp.calendarContainer.appendChild(btn);
                      }
                  };
              };
          }

          function initFlatpickrFilters() {
              const startDate = document.querySelector(
                  "[data-date-filter-target='startDate']"
              );
              const endDate = document.querySelector(
                  "[data-date-filter-target='endDate']"
              );
              const submitButton = document.querySelector(
                  "[data-date-filter-target='submitButton']"
              );
              if (!submitButton) return;
              [startDate, endDate].forEach((el) => {
                  if (el && !el._flatpickr) {
                      flatpickr(el, {
                          dateFormat: "d-m-Y",
                          minDate: "01-01-2020",
                          maxDate: "31-12-3000",
                          locale: "es",
                          altInput: true,
                          altFormat: "d-m-Y",
                          onChange: () => submitButton.click(),
                          plugins: [clearButtonPlugin()]
                      });
                  }
              });
          }

          document.addEventListener("turbo:load", () => {
              initFlatpickrFilters();
              initFacturacionsTable();
          });

          document.addEventListener("turbo:frame-load", (e) => {
              if (e.target.id === "facturacions_frame") {
                  initFlatpickrFilters();
                  initFacturacionsTable();
              }
          });
      })();
  </script>

  <style>
      .dataTable-table tbody td {
          color: #fff !important;
      }
      .datatable-ascending,
      .datatable-descending {
          background-color: #539DED !important;
          color: #fff !important;
      }
      #facturacions-table thead th button.datatable-sorter {
          background: transparent !important;
          border: none !important;
          color: #fff !important;
      }
      #facturacions-table thead th button.datatable-sorter:hover {
          background: transparent !important;
          color: #1d4ed8 !important;
      }
      #facturacions-table thead th button.datatable-sorter:hover::before,
      #facturacions-table thead th button.datatable-sorter:hover::after {
          background-color: transparent !important;
          color: #1d4ed8 !important;
      }
      #facturacions-table .datatable-selector {
          background-color: #f2f2f2 !important;
          color: #000 !important;
          border: 1px solid #ccc !important;
          border-radius: 4px;
          padding: 0.25rem 0.5rem;
      }
      #facturacions-table .datatable-input {
          background-color: #f2f2f2 !important;
          color: #000 !important;
          border: 1px solid #ccc !important;
          border-radius: 4px;
          padding: 0.25rem 0.5rem;
      }
      #facturacions-table .datatable-input::placeholder {
          color: #888;
      }
      .datatable-input:disabled {
          background-color: #3a3a3a !important;
          color: #aaa !important;
          cursor: not-allowed !important;
      }

      .flatpickr-clear-btn {
          background: #e53e3e;
          border: 0;
          color: #fff;
          padding: 0.25rem 0.5rem;
          margin-left: 1rem;
          cursor: pointer;
          font-size: 0.9rem;
          border-radius: 4px;
      }
      .flatpickr-clear-btn:hover {
          background: #c53030;
      }
  </style>
</turbo-frame>